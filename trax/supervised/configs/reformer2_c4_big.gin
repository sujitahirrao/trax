# Copyright 2021 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.models
import trax.optimizers
import trax.data.inputs
import trax.data.tf_inputs
import trax.supervised.trainer_lib

include 'c4_trax_data.gin'

dropout = 0.1
ff_chunk_size = 1024

d_model = 4096
d_ff = 32768
n_heads = 32

# We are using T5's 32k SPM model by default.
vocab_size = 32000


# Parameters for LSHSelfAttention:
# ==============================================================================
LSHSelfAttention.attention_dropout = %dropout
LSHSelfAttention.chunk_len = 128
LSHSelfAttention.n_buckets = None
LSHSelfAttention.n_chunks_after = 0
LSHSelfAttention.n_chunks_before = 1
LSHSelfAttention.n_hashes = 2
LSHSelfAttention.n_parallel_heads = 1
LSHSelfAttention.predict_drop_len = %max_length
LSHSelfAttention.predict_mem_len = %max_length
# Reformer2's *encoder* is bidirectional.
ref2_encoder/LSHSelfAttention.n_chunks_after = 1

# Parameters for data.Batch:
# ==============================================================================
data.Batch.batch_size = 256
validation/data.Batch.batch_size = 8

# Parameters for multifactor:
# ==============================================================================
multifactor.constant = 1.0
multifactor.factors = 'constant * rsqrt_decay'
multifactor.warmup_steps = 10000

# Parameters for Adafactor:
# ==============================================================================
Adafactor.weight_decay_rate = 1e-5
Adafactor.weight_decay_n_steps = 50000
Adafactor.beta1 = 0.0
Adafactor.decay_rate = 0.8
Adafactor.clipping_threshold = 1.0
Adafactor.epsilon1 = 1e-16
Adafactor.epsilon2 = 0.001
Adafactor.factored = True
Adafactor.multiply_by_parameter_scale = True

# Parameters for train:
# ==============================================================================
train.eval_frequency = 100
train.eval_steps = 1
train.model = @trax.models.Reformer2
train.steps = 900000
train.optimizer = @trax.optimizers.Adafactor
train.checkpoint_highest = 'accuracy'
train.checkpoint_lowest = 'loss'
train.permanent_checkpoint_frequency = 2000
train.use_memory_efficient_trainer = 2
train.loss_chunk_size = 1024
train.loss_fn = @CrossEntropyLossWithLogSoftmax()

# enc_attn_type = @LSHSelfAttention
# dec_attn_type = @ref2_encoder/LSHSelfAttention
MultiplicativeConvCausalAttention.sparsity = 32
MultiplicativeConvCausalAttention.share_qk = True
MultiplicativeConvCausalAttention.force_no_dropout = True  # runs faster
enc_attn_type = @Attention
dec_attn_type = @MultiplicativeConvCausalAttention


# Parameters for Reformer2:
# ==============================================================================
Reformer2.d_model = %d_model  # was  512
Reformer2.d_ff = %d_ff        # was 2048
Reformer2.dropout = %dropout  # was  0.1
Reformer2.ff_activation = @trax.layers.Relu
Reformer2.ff_dropout = 0.1
Reformer2.ff_chunk_size = %ff_chunk_size
Reformer2.ff_sparsity = (128, 32)
Reformer2.ff_use_sru = (1, 64)
Reformer2.max_len = 32768  # 32*1024
Reformer2.mode = 'train'
Reformer2.n_heads = %n_heads
Reformer2.n_encoder_layers = 4
Reformer2.n_decoder_layers = 24
Reformer2.input_vocab_size = %vocab_size
Reformer2.encoder_attention_type = %enc_attn_type
Reformer2.encoder_decoder_attention_type = %dec_attn_type
Reformer2.use_two_swaps_per_encoder_block = True
Reformer2.reversible_encoder = True
Reformer2.n_layers_forget = 0
Reformer2.pos_type = None
Reformer2.attention_chunk_size = 0
Reformer2.use_bfloat16 = False
Reformer2.loss_sparsity = 0
